{"ast":null,"code":"var _jsxFileName = \"/Users/Julia/Documents/Projects/infinite-scroll/client/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { Grid, InputBase } from '@material-ui/core';\nimport { Search } from '@material-ui/icons';\nimport { motion, useViewportScroll } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '30%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    display: 'flex',\n    justifySelf: 'flex-end'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%'\n  }\n}));\nconst logoVariants = {\n  hidden: {\n    opacity: 0,\n    y: '-100vh'\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      type: 'spring'\n    }\n  }\n};\nexport default function Header({\n  setSearchTerm\n}) {\n  _s();\n\n  const classes = useStyles();\n  const searchRef = useRef();\n  const {\n    scrollYProgress\n  } = useViewportScroll();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(motion.img, {\n          src: process.env.PUBLIC_URL + '/logo.png',\n          variants: logoVariants,\n          initial: \"hidden\",\n          animate: \"visible\",\n          alt: \"logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.search,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.searchIcon,\n          children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          placeholder: \"Search\\u2026\",\n          inputRef: searchRef,\n          classes: {\n            root: classes.inputRoot,\n            input: classes.inputInput\n          },\n          inputProps: {\n            'aria-label': 'search'\n          },\n          onChange: () => setSearchTerm(searchRef.current.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.h1, {\n      children: \"SCROLL ME!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"VlRBnSNo7VrNvouzh7tq8zL101A=\", false, function () {\n  return [useStyles, useViewportScroll];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/Julia/Documents/Projects/infinite-scroll/client/src/components/Header.js"],"names":["useRef","fade","makeStyles","Grid","InputBase","Search","motion","useViewportScroll","useStyles","theme","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","justifySelf","inputInput","paddingLeft","transition","transitions","create","logoVariants","hidden","opacity","y","visible","type","Header","setSearchTerm","classes","searchRef","scrollYProgress","process","env","PUBLIC_URL","root","input","current","value"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nimport { Grid, InputBase } from '@material-ui/core';\nimport { Search } from '@material-ui/icons';\n\nimport { motion, useViewportScroll } from 'framer-motion';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '30%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    display: 'flex',\n    justifySelf: 'flex-end',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    \n  },\n}));\n\nconst logoVariants = {\n  hidden: {\n    opacity: 0,\n    y: '-100vh',\n  },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      type: 'spring',\n    },\n  },\n};\n\nexport default function Header({ setSearchTerm }) {\n  const classes = useStyles();\n  const searchRef = useRef();\n  const { scrollYProgress } = useViewportScroll();\n\n  return (\n    <div className=\"header\">\n      <Grid direction=\"row\">\n        <div>\n          <motion.img\n            src={process.env.PUBLIC_URL + '/logo.png'}\n            variants={logoVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            alt=\"logo\"\n            className=\"logo\"\n          />\n        </div>\n        <div className={classes.search}>\n          <div className={classes.searchIcon}>\n            <Search />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            inputRef={searchRef}\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'search' }}\n            onChange={() => setSearchTerm(searchRef.current.value)}\n          />\n        </div>\n      </Grid>\n\n      <motion.h1>SCROLL ME!</motion.h1>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}