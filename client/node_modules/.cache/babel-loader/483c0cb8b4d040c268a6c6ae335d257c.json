{"ast":null,"code":"var _jsxFileName = \"/Users/Julia/Documents/Projects/infinite-scroll/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Loader from './components/Loader';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pins, setPins] = useState([]);\n\n  const getData = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('/api/allpins');\n      console.log(data);\n    } catch (error) {\n      console.log('ERROR!', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getData,\n      children: \"press me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: pins.length,\n      next: getData,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this),\n      endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Yay! You have seen it all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this),\n      children: pins.map(pin => {\n        /*#__PURE__*/\n        _jsxDEV(\"img\", {\n          src: pin.link,\n          alt: \"\"\n        }, pin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"w/T4+zLM8pC6FNk/kpc7yelGRXI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Julia/Documents/Projects/infinite-scroll/client/src/App.js"],"names":["useState","axios","InfiniteScroll","Loader","Header","App","pins","setPins","getData","data","get","console","log","error","length","textAlign","map","pin","link","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,KAAK,CAACS,GAAN,CAAU,cAAV,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KAHD,CAGE,OAAOI,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,KAAtB;AACD;AACF,GAPD;;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,cAAD;AACE,MAAA,UAAU,EAAEF,IAAI,CAACQ,MADnB;AAEE,MAAA,IAAI,EAAEN,OAFR;AAGE,MAAA,OAAO,EAAE,IAHX;AAIE,MAAA,MAAM,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJV;AAKE,MAAA,UAAU,eACR;AAAG,QAAA,KAAK,EAAE;AAAEO,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA,gBAWGT,IAAI,CAACU,GAAL,CAASC,GAAG,IAAI;AACf;AAAA;AAAK,UAAA,GAAG,EAAEA,GAAG,CAACC,IAAd;AAAiC,UAAA,GAAG,EAAC;AAArC,WAAyBD,GAAG,CAACE,EAA7B;AAAA;AAAA;AAAA;AAAA;AACD,OAFA;AAXH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAqBD;;GAjCQd,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport Loader from './components/Loader';\nimport Header from './components/Header';\n\nfunction App() {\n  const [pins, setPins] = useState([]);\n\n  const getData = async () => {\n    try {\n      const { data } = await axios.get('/api/allpins');\n      console.log(data);\n    } catch (error) {\n      console.log('ERROR!', error);\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <button onClick={getData}>press me</button>\n      <InfiniteScroll\n        dataLength={pins.length}\n        next={getData}\n        hasMore={true}\n        loader={<Loader />}\n        endMessage={\n          <p style={{ textAlign: 'center' }}>\n            <b>Yay! You have seen it all</b>\n          </p>\n        }\n      >\n        {pins.map(pin => {\n          <img src={pin.link} key={pin.id} alt=\"\"></img>\n        })}\n      </InfiniteScroll>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}